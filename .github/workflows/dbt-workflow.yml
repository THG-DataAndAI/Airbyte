name: Run dbt Transformations

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'dbt action to perform'
        required: true
        default: 'run'
        type: choice
        options:
          - run
          - test
          - run-and-test
          - deploy-cronjob
          - manual-job
      environment:
        description: 'Environment to run against'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - prod
      models:
        description: 'Specific models to run (optional)'
        required: false
        default: ''
  
  schedule:
    # Run every 4 hours
    - cron: '0 */4 * * *'

env:
  PROJECT_ID: thg-dev-icehouse
  REGION: europe-west2
  ZONE: europe-west2-a
  CLUSTER_NAME: airbyte-cluster
  NAMESPACE: airbyte
  DBT_NAMESPACE: dbt

jobs:
  dbt-transformation:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'prod' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: Configure kubectl
      run: |
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
          --region=${{ env.REGION }} \
          --project=${{ env.PROJECT_ID }}

    - name: Verify cluster connection
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Create dbt ConfigMaps
      run: |
        echo "Creating/updating dbt ConfigMaps..."
        
        # Create dbt-project ConfigMap
        kubectl create configmap dbt-project-config \
          --namespace=${{ env.NAMESPACE }} \
          --from-file=dbt_project.yml=dbt-config/dbt_project.yml \
          --dry-run=client -o yaml | kubectl apply -f -
        
        # Create dbt-profiles ConfigMap
        kubectl create configmap dbt-profiles-config \
          --namespace=${{ env.NAMESPACE }} \
          --from-file=profiles.yml=dbt-config/profiles/profiles.yml \
          --dry-run=client -o yaml | kubectl apply -f -
        
        # Create dbt-models ConfigMap
        kubectl create configmap dbt-models-config \
          --namespace=${{ env.NAMESPACE }} \
          --from-file=dbt-config/models/ \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Run dbt transformation
      if: github.event.inputs.action == 'run' || github.event.inputs.action == 'run-and-test' || github.event_name == 'schedule'
      run: |
        echo "Running dbt transformations..."
        
        # Generate unique job name
        JOB_NAME="dbt-run-$(date +%s)"
        
        # Create job manifest
        cat <<EOF | kubectl apply -f -
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: $JOB_NAME
          namespace: ${{ env.NAMESPACE }}
        spec:
          template:
            spec:
              serviceAccountName: airbyte
              containers:
              - name: dbt-run
                image: ghcr.io/dbt-labs/dbt-postgres:1.7.4
                command:
                - /bin/bash
                - -c
                - |
                  echo "Starting dbt transformation run..."
                  echo "Environment: ${{ github.event.inputs.environment || 'prod' }}"
                  echo "Current time: \$(date)"
                  
                  # Run dbt deps if needed
                  dbt deps --profiles-dir=/dbt/profiles --project-dir=/dbt || true
                  
                  # Run dbt models
                  echo "Running dbt models..."
                  MODELS_ARG=""
                  if [ -n "${{ github.event.inputs.models }}" ]; then
                    MODELS_ARG="--models ${{ github.event.inputs.models }}"
                  fi
                  
                  dbt run --profiles-dir=/dbt/profiles --project-dir=/dbt --target=${{ github.event.inputs.environment || 'prod' }} \$MODELS_ARG
                  
                  echo "dbt transformation completed at \$(date)"
                env:
                - name: DBT_DATABASE_HOST
                  value: "airbyte-db-postgresql"
                - name: DBT_DATABASE_USER
                  value: "airbyte"
                - name: DBT_DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: airbyte-db-secrets
                      key: DATABASE_PASSWORD
                - name: DBT_DATABASE_PORT
                  value: "5432"
                - name: DBT_DATABASE_NAME
                  value: "airbyte"
                - name: DBT_SCHEMA
                  value: "dbt_transforms"
                volumeMounts:
                - name: dbt-project
                  mountPath: /dbt/dbt_project.yml
                  subPath: dbt_project.yml
                - name: dbt-profiles
                  mountPath: /dbt/profiles/profiles.yml
                  subPath: profiles.yml
                - name: dbt-models
                  mountPath: /dbt/models
              volumes:
              - name: dbt-project
                configMap:
                  name: dbt-project-config
              - name: dbt-profiles
                configMap:
                  name: dbt-profiles-config
              - name: dbt-models
                configMap:
                  name: dbt-models-config
              restartPolicy: Never
          backoffLimit: 1
        EOF
        
        # Wait for job to complete
        echo "Waiting for job to complete..."
        kubectl wait --for=condition=complete job/$JOB_NAME -n ${{ env.NAMESPACE }} --timeout=600s || {
          echo "Job did not complete within timeout. Checking status..."
          kubectl describe job/$JOB_NAME -n ${{ env.NAMESPACE }}
          kubectl logs job/$JOB_NAME -n ${{ env.NAMESPACE }}
          exit 1
        }
        
        # Show logs
        echo ""
        echo "dbt transformation logs:"
        echo "========================"
        kubectl logs job/$JOB_NAME -n ${{ env.NAMESPACE }}
        
        # Cleanup
        kubectl delete job/$JOB_NAME -n ${{ env.NAMESPACE }}

    - name: Run dbt tests
      if: github.event.inputs.action == 'test' || github.event.inputs.action == 'run-and-test'
      run: |
        echo "Running dbt tests..."
        
        # Generate unique job name
        JOB_NAME="dbt-test-$(date +%s)"
        
        # Create job manifest
        cat <<EOF | kubectl apply -f -
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: $JOB_NAME
          namespace: ${{ env.NAMESPACE }}
        spec:
          template:
            spec:
              serviceAccountName: airbyte
              containers:
              - name: dbt-test
                image: ghcr.io/dbt-labs/dbt-postgres:1.7.4
                command:
                - /bin/bash
                - -c
                - |
                  echo "Starting dbt tests..."
                  dbt test --profiles-dir=/dbt/profiles --project-dir=/dbt --target=${{ github.event.inputs.environment || 'prod' }}
                  echo "dbt tests completed"
                env:
                - name: DBT_DATABASE_HOST
                  value: "airbyte-db-postgresql"
                - name: DBT_DATABASE_USER
                  value: "airbyte"
                - name: DBT_DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: airbyte-db-secrets
                      key: DATABASE_PASSWORD
                - name: DBT_DATABASE_PORT
                  value: "5432"
                - name: DBT_DATABASE_NAME
                  value: "airbyte"
                - name: DBT_SCHEMA
                  value: "dbt_transforms"
                volumeMounts:
                - name: dbt-project
                  mountPath: /dbt/dbt_project.yml
                  subPath: dbt_project.yml
                - name: dbt-profiles
                  mountPath: /dbt/profiles/profiles.yml
                  subPath: profiles.yml
                - name: dbt-models
                  mountPath: /dbt/models
              volumes:
              - name: dbt-project
                configMap:
                  name: dbt-project-config
              - name: dbt-profiles
                configMap:
                  name: dbt-profiles-config
              - name: dbt-models
                configMap:
                  name: dbt-models-config
              restartPolicy: Never
          backoffLimit: 1
        EOF
        
        # Wait for job to complete
        kubectl wait --for=condition=complete job/$JOB_NAME -n ${{ env.NAMESPACE }} --timeout=300s
        
        # Show logs
        echo ""
        echo "dbt test logs:"
        echo "==============="
        kubectl logs job/$JOB_NAME -n ${{ env.NAMESPACE }}
        
        # Cleanup
        kubectl delete job/$JOB_NAME -n ${{ env.NAMESPACE }}

    - name: Deploy dbt CronJob
      if: github.event.inputs.action == 'deploy-cronjob'
      run: |
        echo "Deploying dbt CronJob..."
        kubectl apply -f dbt-config/k8s/dbt-cronjob.yaml

    - name: View transformed data
      if: success()
      run: |
        echo ""
        echo "Checking transformed data..."
        kubectl exec -it deployment/airbyte-db-postgresql -n ${{ env.NAMESPACE }} -- \
          psql -U airbyte -d airbyte -c "SELECT table_name FROM information_schema.tables WHERE table_schema = 'dbt_transforms';" || true

    - name: Summary
      if: always()
      run: |
        echo "=========================================="
        echo "dbt Workflow Summary"
        echo "=========================================="
        echo "Action: ${{ github.event.inputs.action || 'scheduled run' }}"
        echo "Environment: ${{ github.event.inputs.environment || 'prod' }}"
        echo "Models: ${{ github.event.inputs.models || 'all' }}"
        echo "Status: ${{ job.status }}"
        echo "=========================================="