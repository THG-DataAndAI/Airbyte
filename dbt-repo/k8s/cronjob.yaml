apiVersion: batch/v1
kind: CronJob
metadata:
  name: dbt-transformations
  namespace: dbt
spec:
  schedule: "0 */4 * * *"  # Run every 4 hours
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: dbt-run
            image: ghcr.io/dbt-labs/dbt-postgres:1.7.4
            command:
            - /bin/bash
            - -c
            - |
              echo "Starting dbt transformation run at $(date)"
              
              # Create dbt project structure
              mkdir -p /dbt/models/staging /dbt/models/marts /dbt/profiles
              
              # Copy configuration files
              cp /config/dbt_project.yml /dbt/
              cp /config/profiles.yml /dbt/profiles/
              
              # Copy model files
              cp /models/sources.yml /dbt/models/staging/_sources.yml
              cp /models/stg_shopify_customers.sql /dbt/models/staging/
              cp /models/stg_shopify_orders.sql /dbt/models/staging/
              cp /models/dim_customers.sql /dbt/models/marts/
              
              # Set profiles directory
              export DBT_PROFILES_DIR=/dbt/profiles
              
              # Run dbt commands
              cd /dbt
              
              echo "Testing database connection..."
              dbt debug
              
              echo "Running dbt models..."
              dbt run
              
              echo "Running dbt tests..."
              dbt test || echo "Some tests failed, check logs"
              
              echo "dbt transformation completed at $(date)"
            env:
            - name: DBT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dbt-postgres-secret
                  key: password
            volumeMounts:
            - name: dbt-project
              mountPath: /config/dbt_project.yml
              subPath: dbt_project.yml
            - name: dbt-profiles
              mountPath: /config/profiles.yml
              subPath: profiles.yml
            - name: dbt-models
              mountPath: /models
          volumes:
          - name: dbt-project
            configMap:
              name: dbt-project-config
          - name: dbt-profiles
            configMap:
              name: dbt-profiles-config
          - name: dbt-models
            configMap:
              name: dbt-models-config
---
# NetworkPolicy to allow dbt namespace to access Airbyte namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dbt-to-postgres
  namespace: airbyte
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgresql
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: dbt
    ports:
    - protocol: TCP
      port: 5432