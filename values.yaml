global:
  serviceAccountName: airbyte
  deploymentMode: oss
  configMapName: airbyte-airbyte-env
  secretName: airbyte-airbyte-secrets
  database:
    secretName: airbyte-db-secrets
    secretValue: DATABASE_PASSWORD
    host: airbyte-db-postgresql
    port: "5432"
    database: airbyte
    user: airbyte
    password: ""  # This will be overridden by secretName/secretValue
  logs:
    accessKey:
      password: minio
      existingSecret: ""
      existingSecretKey: ""
    secretKey:
      password: minio123
      existingSecret: ""
      existingSecretKey: ""

webapp:
  enabled: true
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      # Rate limiting
      nginx.ingress.kubernetes.io/limit-rps: "10"
      nginx.ingress.kubernetes.io/limit-connections: "20"
      # Security headers
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "X-Frame-Options: DENY";
        more_set_headers "X-Content-Type-Options: nosniff";
        more_set_headers "X-XSS-Protection: 1; mode=block";
        more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    hosts:
      - host: airbyte.thg-reporting.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: airbyte-tls
        hosts:
          - airbyte.thg-reporting.com

server:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  env:
    - name: TRACKING_STRATEGY
      value: "segment"
    - name: AIRBYTE_VERSION
      value: "0.50.0"
    - name: CONFIG_DATABASE_USER
      value: "airbyte"
    - name: CONFIG_DATABASE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: airbyte-db-secrets
          key: DATABASE_PASSWORD
    - name: CONFIG_DATABASE_URL
      value: "jdbc:postgresql://airbyte-db-postgresql:5432/airbyte"
    - name: BASIC_AUTH_USERNAME
      value: "airbyte"
    - name: BASIC_AUTH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: airbyte-auth-secrets
          key: AIRBYTE_ADMIN_PASSWORD

worker:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  env:
    - name: SYNC_JOB_MAX_ATTEMPTS
      value: "3"
    - name: SYNC_JOB_MAX_TIMEOUT_DAYS
      value: "3"

airbyte-bootloader:
  enabled: true
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  env:
    - name: DATABASE_USER
      value: "airbyte"
    - name: DATABASE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: airbyte-db-secrets
          key: DATABASE_PASSWORD
    - name: DATABASE_URL
      value: "jdbc:postgresql://airbyte-db-postgresql:5432/airbyte"

temporal:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

postgresql:
  enabled: false  # We'll use external PostgreSQL

externalDatabase:
  host: airbyte-db-postgresql
  port: 5432
  database: airbyte
  user: airbyte
  password: ""  # Will use existingSecret instead
  existingSecret: airbyte-db-secrets
  existingSecretPasswordKey: DATABASE_PASSWORD

minio:
  enabled: true
  auth:
    rootUser: minio
    rootPassword: minio123
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Pod Security Context
podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsNonRoot: true

# Security Context for containers
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL
